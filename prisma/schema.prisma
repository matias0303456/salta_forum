// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  first_name  String     @db.VarChar(100)
  last_name   String     @db.VarChar(100)
  username    String     @db.VarChar(50)
  email       String     @unique
  password    String     @db.VarChar(100)
  avatar      String?    @db.VarChar(255)
  bio         String?    @db.Text()
  timestamp   DateTime   @default(now())
  last_update DateTime   @updatedAt
  posts       Post[]
  comments    Comment[]
  responses   Response[]
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  content     String    @db.LongText()
  picture     String?   @db.VarChar(255)
  timestamp   DateTime  @default(now())
  last_update DateTime  @updatedAt
  comments    Comment[]
  user        User?     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
}

model Comment {
  id          Int        @id @default(autoincrement())
  content     String     @db.Text()
  timestamp   DateTime   @default(now())
  last_update DateTime   @updatedAt
  responses   Response[]
  user        User?      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post        Post?      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  postId      Int
}

model Response {
  id          Int      @id @default(autoincrement())
  content     String   @db.Text()
  timestamp   DateTime @default(now())
  last_update DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comment     Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  commentId   Int
}
